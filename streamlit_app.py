import streamlit as st
import torch
from songgen import (
    VoiceBpeTokenizer,
    SongGenMixedForConditionalGeneration,
    SongGenProcessor
)
import soundfile as sf
import os
from datetime import datetime
import tempfile

# Page config
st.set_page_config(
    page_title="SongGen AI - ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏û‡∏•‡∏á‡∏î‡πâ‡∏ß‡∏¢ AI",
    page_icon="üéµ",
    layout="wide"
)

# Title
st.title("üéµ SongGen AI - ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏û‡∏•‡∏á‡∏î‡πâ‡∏ß‡∏¢ AI")
st.markdown("‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏û‡∏•‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏û‡∏•‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏î‡πâ‡∏ß‡∏¢ AI")

# Initialize model (only once)
@st.cache_resource
def load_model():
    with st.spinner("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î AI Model..."):
        ckpt_path = "LiuZH-19/SongGen_mixed_pro"
        device = "cuda:0" if torch.cuda.is_available() else "cpu"
        model = SongGenMixedForConditionalGeneration.from_pretrained(
            ckpt_path,
            attn_implementation='sdpa').to(device)
        processor = SongGenProcessor(ckpt_path, device)
        return model, processor

# Load model
model, processor = load_model()

# Input form
with st.form("song_form"):
    st.subheader("üìù ‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏•‡∏á")
    
    lyrics = st.text_area(
        "‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏û‡∏•‡∏á (Lyrics):",
        placeholder="‡πÉ‡∏™‡πà‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏û‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà...",
        height=150
    )
    
    description = st.text_area(
        "‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏™‡πÑ‡∏ï‡∏•‡πå‡πÄ‡∏û‡∏•‡∏á (Music Description):",
        placeholder="‡πÄ‡∏ä‡πà‡∏ô: ‡πÄ‡∏û‡∏•‡∏á‡∏£‡πá‡∏≠‡∏Ñ ‡πÄ‡∏£‡πá‡∏ß ‡πÉ‡∏ä‡πâ‡∏Å‡∏µ‡∏ï‡∏≤‡∏£‡πå‡πÑ‡∏ü‡∏ü‡πâ‡∏≤",
        height=100
    )
    
    music_type = st.selectbox(
        "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÄ‡∏û‡∏•‡∏á:",
        ["Pop", "Rock", "Jazz", "Classical", "Electronic", "Country", "Hip Hop", "‡∏≠‡∏∑‡πà‡∏ô‡πÜ"]
    )
    
    submitted = st.form_submit_button("üéµ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏û‡∏•‡∏á", type="primary")

# Generate song
if submitted:
    if not lyrics or not description:
        st.error("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏û‡∏•‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢")
    else:
        with st.spinner("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏û‡∏•‡∏á... ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà (30-60 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)"):
            try:
                # Generate the song
                model_inputs = processor(text=description, lyrics=lyrics)
                generation = model.generate(**model_inputs, do_sample=True)
                
                # Save the generated audio
                audio_arr = generation.cpu().numpy().squeeze()
                
                # Create temporary file
                timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
                temp_file = tempfile.NamedTemporaryFile(delete=False, suffix='.wav')
                sf.write(temp_file.name, audio_arr, model.config.sampling_rate)
                
                st.success("‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏û‡∏•‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
                
                # Display audio player
                st.subheader("üéß ‡∏ü‡∏±‡∏á‡πÄ‡∏û‡∏•‡∏á")
                with open(temp_file.name, 'rb') as audio_file:
                    st.audio(audio_file.read(), format='audio/wav')
                
                # Download button
                st.download_button(
                    label="üì• ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏û‡∏•‡∏á",
                    data=audio_file.read(),
                    file_name=f"songgen_{timestamp}.wav",
                    mime="audio/wav"
                )
                
                # Clean up
                os.unlink(temp_file.name)
                
            except Exception as e:
                st.error(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {str(e)}")

# Sidebar info
with st.sidebar:
    st.header("‚ÑπÔ∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
    st.markdown("""
    **SongGen AI** ‡πÄ‡∏õ‡πá‡∏ô AI ‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏û‡∏•‡∏á‡∏à‡∏≤‡∏Å:
    - ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏û‡∏•‡∏á (Lyrics)
    - ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏™‡πÑ‡∏ï‡∏•‡πå‡πÄ‡∏û‡∏•‡∏á
    
    **‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:**
    - ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏û‡∏•‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏≤‡∏ô
    - ‡πÄ‡∏û‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏î‡πâ‡∏¢‡∏≤‡∏ß‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 30 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    - ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©
    """)
    
    st.header("üéµ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á")
    st.markdown("""
    **‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏û‡∏•‡∏á:**
    ```
    I love you so much
    You make my heart sing
    Together forever
    ```
    
    **‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢:**
    ```
    ‡πÄ‡∏û‡∏•‡∏á‡∏õ‡πá‡∏≠‡∏õ ‡πÇ‡∏£‡πÅ‡∏°‡∏ô‡∏ï‡∏¥‡∏Å ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡∏µ‡∏¢‡πÇ‡∏ô
    ```
    """)

# Footer
st.markdown("---")
st.markdown("üéµ SongGen AI - ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏û‡∏•‡∏á‡∏î‡πâ‡∏ß‡∏¢ AI | Powered by Streamlit") 